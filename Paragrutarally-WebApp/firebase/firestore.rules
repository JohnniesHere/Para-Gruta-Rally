// firebase/firestore.rules
// Firestore security rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isInstructor() {
      return isSignedIn() &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'instructor' ||
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
        );
    }

    function isCurrentUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isValidTimestamp() {
      return request.time == request.resource.data.updatedAt;
    }

    // Users collection
    match /users/{userId} {
      // Anyone can read their own user document
      // Admins can read all user documents
      // Instructor can read all user documents
      allow read: if isCurrentUser(userId) || isInstructor();

      // Only admins can create user documents
      // Users can update their own documents (but not role)
      allow create: if isAdmin();
      allow update: if isAdmin() ||
        (isCurrentUser(userId) &&
         request.resource.data.role == resource.data.role);

      // Only admins can delete user documents
      allow delete: if isAdmin();
    }

    // Kids collection
    match /kids/{kidId} {
      // Instructor and admins can read, create, update, delete
      // External partners can only read
      allow read: if isSignedIn();
      allow create, update, delete: if isInstructor();
    }

    // Teams collection
    match /teams/{teamId} {
      // Instructor and admins can read, create, update, delete
      // External partners can only read
      allow read: if isSignedIn();
      allow create, update, delete: if isInstructor();
    }

    // Activities collection
    match /activities/{activityId} {
      // Instructor and admins can read, create, update, delete
      // External partners can only read
      allow read: if isSignedIn();
      allow create, update, delete: if isInstructor();
    }

    // Forms collection
    match /forms/{formId} {
      // Instructor and admins can read, create, update, delete
      // External partners can only read
      allow read: if isSignedIn();
      allow create: if isAdmin();
      allow update, delete: if isAdmin();
    }

    // Form submissions collection
    match /formSubmissions/{submissionId} {
      // Users can read and create their own submissions
      // Instructor and admins can read all submissions
      // Only instructor and admins can update or delete submissions
      allow read: if isInstructor() ||
        (isSignedIn() && resource.data.submittedBy == request.auth.uid);
      allow create: if isSignedIn();
      allow update: if isInstructor() ||
        (isSignedIn() &&
         resource.data.submittedBy == request.auth.uid &&
         resource.data.status == 'draft');
      allow delete: if isInstructor();
    }

    // Import logs collection
    match /importLogs/{logId} {
      // Only instructor and admins can read, create, update, delete import logs
      allow read, create, update, delete: if isInstructor();
    }
  }
}