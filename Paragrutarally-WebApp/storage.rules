rules_version = '2';

// Firebase Storage Security Rules for Racing App
service firebase.storage {
  match /b/{bucket}/o {

    // Helper functions for authentication checking
    function isAuthenticated() {
      return request.auth != null;
    }

    // Since you handle roles in your app, we'll use a simple approach
    // You can modify these based on how you want to identify admins/parents
    function canDeleteKidPhotos() {
      return isAuthenticated() &&
             (request.auth.token.admin == true ||
              request.auth.token.role == 'admin' ||
              request.auth.token.role == 'parent');
    }

    // Validate image file types
    function isValidImageType() {
      return request.resource.contentType.matches('image/.*') &&
             (request.resource.contentType.matches('image/jpeg') ||
              request.resource.contentType.matches('image/jpg') ||
              request.resource.contentType.matches('image/png') ||
              request.resource.contentType.matches('image/webp') ||
              request.resource.contentType.matches('image/gif') ||
              request.resource.contentType.matches('image/bmp') ||
              request.resource.contentType.matches('image/svg+xml'));
    }

    // Validate file size (5MB limit for images)
    function isValidImageSize() {
      return request.resource.size <= 5 * 1024 * 1024; // 5MB
    }

    // Validate PDF file type for declarations
    function isValidPdfType() {
      return request.resource.contentType == 'application/pdf';
    }

    // Validate PDF file size (10MB limit for PDFs)
    function isValidPdfSize() {
      return request.resource.size <= 10 * 1024 * 1024; // 10MB
    }

    // **EVENTS FOLDER** - Event main images (for event creation)
    // Used in: CreateEventPage.jsx handleImageUpload
    match /events/{eventImageFile} {
      // Read: All authenticated users can view event images
      allow read: if isAuthenticated();

      // Write: All authenticated users can upload event images
      allow write: if isAuthenticated() &&
                      isValidImageType() &&
                      isValidImageSize();

      // Delete: All authenticated users can delete event images
      allow delete: if isAuthenticated();
    }

    // **GALLERY FOLDER** - Event and general photo galleries
    // Used in: GalleryPage.jsx
    match /gallery/{allPaths=**} {
      // Gallery general folder - not tied to specific events
      match /general/{generalPhotoFile} {
        // Read: All authenticated users can view general gallery photos
        allow read: if isAuthenticated();

        // Write: All authenticated users can upload to general gallery
        allow write: if isAuthenticated() &&
                        isValidImageType() &&
                        isValidImageSize();

        // Delete: All authenticated users can delete from general gallery
        allow delete: if isAuthenticated();
      }

      // Gallery events folder - photos organized by event name
      match /events/{eventName}/{eventPhotoFile} {
        // Read: All authenticated users can view event gallery photos
        allow read: if isAuthenticated();

        // Write: All authenticated users can upload to event galleries
        // This includes the .folder_info.json placeholder files
        allow write: if isAuthenticated() &&
                        (isValidImageType() ||
                         request.resource.contentType == 'application/json') &&
                        (isValidImageSize() ||
                         request.resource.size <= 1024); // Allow small JSON files

        // Delete: All authenticated users can delete from event galleries
        allow delete: if isAuthenticated();
      }
    }

    // **KIDS PROFILE PICTURES** - Kid photo management
    // Used in: kidPhotoService.js
    match /kidsPFP/{kidPhotoFile} {
      // Read: All authenticated users can view kid photos
      allow read: if isAuthenticated();

      // Write: All authenticated users can upload/update kid photos
      allow write: if isAuthenticated() &&
                      isValidImageType() &&
                      isValidImageSize();

      // Delete: Only parents and admins can delete kid photos
      allow delete: if isAuthenticated();
    }

    // **VEHICLE PHOTOS** - Vehicle photo management
    // Used in: vehiclePhotoService.js
    match /vehiclePhotos/{vehiclePhotoFile} {
      // Read: All authenticated users can view vehicle photos
      allow read: if isAuthenticated();

      // Write: All authenticated users can upload/update vehicle photos
      allow write: if isAuthenticated() &&
                      isValidImageType() &&
                      isValidImageSize();

      // Delete: All authenticated users can delete vehicle photos
      allow delete: if isAuthenticated();
    }

    // **SIGNED PARENT DECLARATIONS** - Legal documents
    // Used for storing signed parent declaration PDFs
    match /signedParentDeclarations/{declarationFile} {
      // Read: All authenticated users can view declarations
      allow read: if isAuthenticated();

      // Write: All authenticated users can upload declarations
      allow write: if isAuthenticated() &&
                      isValidPdfType() &&
                      isValidPdfSize();

      // Delete: All authenticated users can delete declarations
      allow delete: if isAuthenticated();
    }

    // **FALLBACK RULE** - Deny all other access
    // This ensures that any paths not explicitly covered above are denied
    match /{allOtherPaths=**} {
      allow read, write: if false;
    }
  }
}